1. 오픈뱅킹은 하나의 앱으로 여러 은행의 계좌를 조회하고, 결제, 송금 등을 할 수 있는 금융 서비스 이다. 여기서 주의깊게 봐야하는 점은 하나의 앱이 여러 계좌를 연결하고 있다는 점이다. 즉, 다시 말해 보안이 한 곳만 무너져도 모든 계좌가 위험 할 수 있다는 뜻 이다. 고려해야 할 사항들로는 다음과 같다.
[중요정보 보호] 
- 메모리 내 노출 방지 : 기밀성이 요구되는 이용자 중요정보를 메모리에 노출 되는지 확인 한다.
- 중요정보 화면 보호 적용 : 기밀성이 요구되는 중요정보의 화면 표시 및 화면 캡처를 방지하도록 한다.
- 입력정보 보호 적용 : 이용자의 중요정보 입력 시 보호기능을 적용한다.
[인증]
- 멀티로그인 탐지 적용 : 서로 다른 단말에서 동일 계정으로 로그인 시 탐지 및 대응 여부 확인한다.
- 인증 우회 방지 적용 : 이용자 인증 및 세션 관리와 관련된 기능 구현의 적정성을 점검한다.
[서버 보안]
- 서버 보안 적용 : 서버에서 발생할 수 있는 웹서버 취약점을 고려한다.

2.1)
품질특성에는 기능성, 신뢰성, 사용성, 효율성, 유지보수성, 이식성 정도 있는것으로 판단되며, 이 문제에서는 신뢰성, 기능성, 효율성, 사용성, 이식성 정도 있는 것 같다.
신뢰성 : 회원가입을 위해 외부의 실명인증 시스템을 통해 실명인증을 수행한다.
기능성 : 실명인증에 사용되는 일반 사용자의 개인정보는 외부에 유출되지 않도록 해야한다.
효율성 : 검색은 검색어 입력을 통해 제공되며 평군 1.5초 이내 응답시간이 보장되어야 한다.
사용성 : 초보자도 쉽게 사용할 수 있도록 사용자 인터페이스를 구성해야한다.
이식성 : 이 시스템은 전자정부 프레임워크를 사용해서 개발하여야한다.

2.2)







3.1)
고려해야할 사항과 이유 : 고려해야할 사항은 기존에 있던 코드 내용과 기능들에 대해서 정확히 알고 고도화 작업을 수행해야 할 것 이다. 이유는 기존에 동작하는 방식을 간과하고 고도화 작업을 수행 할 경우에 개발시간이 생각보다 많이 늘어날 수 있기 때문이다.

사용자 스토리 제시 : 성결대학교에 가입된 사람들은
각자 필요한 정보(성적, 등록, 학적, 교직 등)들을 얻기 위하여 검색, 수정, 요청 등을 원한다.

3.2)
개발완료후 넘겨야 할 주요 문서는 필요에 따라 여러가지가 될 수 있다고 생각한다. 그 중에서 필수로 넘겨줘야 한다고 생각하는 문서들은 다음과 같다.

프로젝트 완료보고서 : 프로젝트의 진행에 대한 최종 보고서로 이것에 대한 확인이 완료되면 프로젝트는 종료된다.

개발 산출물별 검사리스트 : 클라이언트에게 최종적으로 수행된 과정과 산출물에 이상이 없는지 체크를 받는 확인서이다.

운영자 메뉴얼 : 시스템을 관리하는 운영자가 관리자 시스템을 사용하기 위한 이용법을 설명한 문서이다. 

사용자 메뉴얼 : 사이트에 구현된 기능에 대해 사용할 수 있는 사용 설명서와 같은 문서이다.

요구사항 정의서 :  개발자가 의뢰인의 요구를 정의한 정의서이다. 이를 통해 이후 기획이 되므로 이 단계에서 의뢰인과 개발자의 '합의' 와 '절충'이 필요하다. 이 과정에서 합의가 되지 않거나 흐지부지되면 향후 개발 중 ' 뒤집기'가 빈번해 질 수 있다.

이 정도가 주요 문서가 될 것 같다고 생각한다.

3.3) 
 프로젝트에 따라 사용자 요구에 따라 달라질 수 있으나 기본적인 형태는 다음과 같다.
 1. 프로젝트 산출물을 내고 팀원들간의 정의, 약어를 정한다.
 2. 팀 역할을 정하고 직능별 조직화를 한다.
 3. 프로젝트별 조직을 정한다. ( 매트릭스 조직, 애자일 조직 )
 4. 프로젝트 실행 - 작업 시작 미팅, 작업 결과 수집
 5. 프로젝트 모니터링 ( 일정과 비용, 진척도를 중심적으로 본다)
 6. 리스크 관리 - 리스크 파악, 리스크 평가


4. 
- 평소 이디야 카페를 좋아해서 초기 어플 출시했을 때, '이디야 멤버스' 어플을 사용했었다. 어플 자체 성능에는 문제는 없었지만 너무 프로토타입 같은 디자인이였어서 아이콘의 여백, 텍스트 사이의 마진 이런 것들이 하나도 맞지 않아서 어플을 이용하는데 만족스럽지 못한 경험이 있습니다. 따라서 개선방안으로는 기능에 대한 문제는 없는 것으로 판된 되었기 때문에 전체적인 여백, 아이콘 위치 등을 알맞게 조정하면 될 것 같다.
- 혼자 프로젝트로 'MBTI' 사이트를 개발해 본 적이 있습니다. 질문에 대한 답변을 버튼 형식으로 두개 만들어서 작동하게 만들었습니다. 개발을 할 때는 몰랐지만 일부 사용자들 중 에서는 버튼만 클릭하는게 아닌 문제를 읽으면서 습관성으로 버튼 주변을 무의식으로 클릭하는 경우가 있고 그 결과 버튼을 누르지 않아도 클릭이 되는 현상이 일어났습니다. 개선방안으로는 버튼 이외에 다른 곳을 클릭하여도 버튼이 눌리지 않도록 코드 개선을 했습니다.

5. 노력 = 인원 * 개발 기간
          = ( 6 * 4 ) + ( 5 * 6 ) = 54

6. 